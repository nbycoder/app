{"version":3,"sources":["style/Global.js","style/App.js","components/DigitBtn.js","components/OperationBtn.js","components/App.js","Theme.jsx","index.js"],"names":["Global","createGlobalStyle","theme","colors","bg","Calc","styled","div","Two","button","btn","output","btntext","hover","Output","prev","curr","Btn","input","DigitBtn","dispatch","digit","onClick","type","ACTIONS","ADD_DIGIT","payload","OperationBtn","operation","CHOOSE_OPERATION","CLEAR","DELETE_DIGIT","EVALUATE","reducer","state","overwrite","includes","evaluate","length","slice","previous","parseFloat","current","isNaN","computation","toString","INT_FORMATTER","Intl","NumberFormat","maximumFractionDigits","formatOperand","operand","split","integer","decimal","format","App","useReducer","className","Theme","children","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.953a0391.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\n\nexport const Global = createGlobalStyle`\n\n@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500&display=swap');\n\n    * {\n        box-sizing: border-box;\n    }\n    body {\n         background-color: ${({theme}) => theme.colors.bg};\n         margin: 0;\n         font-family: 'Poppins', sans-serif;\n    }\n`","import styled from \"styled-components\";\n\nexport const Calc = styled.div`\n   display: grid;\n   margin-top: 2rem;\n   grid-template-columns: repeat(4, 6rem);\n   grid-template-rows: minmax(7rem, auto) repeat(5, 6rem);\n   justify-content: center;\n` \n\nexport const Two = styled.button`\n    grid-column: span 2;\n    background-color: ${({theme}) => theme.colors.btn};\n    border: 1.4px solid ${({theme}) => theme.colors.output};\n    outline: none;\n    cursor: pointer;\n    font-size: 1.4rem;\n    color: ${({theme}) => theme.colors.btntext};\n    font-weight: 500;\n    &:hover, :focus {\n        background-color: ${({theme}) => theme.colors.hover}\n    }\n`\nexport const Output = styled.div`\n    grid-column: 1 / -1;\n    background-color: ${({theme}) => theme.colors.output};\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n    justify-content: space-around;\n    padding: .75rem;\n    word-wrap: break-word;\n    word-break: break-all;\n    .prev {\n        color: ${({theme}) => theme.colors.prev};\n        font-size: 1.5rem;\n    }\n    .curr {\n        color: ${({theme}) => theme.colors.curr};\n        font-size: 2.5rem;\n    }\n`\nexport const Input = styled.div` \n    color: ${({theme}) => theme.colors.input};\n`\nexport const Btn = styled.button`\n    background-color: ${({theme}) => theme.colors.btn};\n    border: 1.4px solid ${({theme}) => theme.colors.output};\n    outline: none;\n    cursor: pointer;\n    font-size: 1.4rem;\n    color: ${({theme}) => theme.colors.btntext};\n    font-weight: 500;\n    &:hover, :focus {\n        background-color: ${({theme}) => theme.colors.hover}\n    }\n`","import React from 'react'\nimport { ACTIONS } from './App'\nimport { Btn } from '../style/App'\n\nfunction DigitBtn({ dispatch, digit }) {\n    return <Btn onClick={() => dispatch({type: ACTIONS.ADD_DIGIT, payload: { digit }})}>{ digit }</Btn>\n}\n\nexport default DigitBtn\n","import React from 'react'\nimport { ACTIONS } from './App'\nimport { Btn } from '../style/App'\n\nfunction OperationBtn({ dispatch, operation }) {\n    return <Btn onClick={() => dispatch({type: ACTIONS.CHOOSE_OPERATION, payload: { operation }})}>{ operation }</Btn>\n}\n\nexport default OperationBtn\n\n","import React, { useReducer } from 'react';\nimport { Global } from '../style/Global';\nimport { Calc, Output, Two, Btn } from '../style/App'\nimport DigitBtn from './DigitBtn';\nimport OperationBtn from './OperationBtn';\n\nexport const ACTIONS = {\n  ADD_DIGIT: 'add-digit',\n  CHOOSE_OPERATION: 'choose-operation',\n  CLEAR: 'clear',\n  DELETE_DIGIT: 'delete-digit',\n  EVALUATE: 'evaluate'\n}\n\nfunction reducer(state, {type, payload}) {\n  switch(type) {\n    case ACTIONS.ADD_DIGIT:\n      if (state.overwrite) { //~ when you type a digit after calculating your values, it overwrites your current calculation\n        return {\n          ...state,\n          curr: payload.digit,\n          overwrite: false,\n        }\n      }\n      if (payload.digit === \"0\" && state.curr === \"0\") { //~ if the first number added is 0 return current state; this prevents from adding a ton of 0s\n        return state\n      }\n      if (payload.digit === \".\" && state.curr.includes(\".\")) { //~ prevents it from adding multiple periods\n        return state\n      }\n      return { //* state object\n        ...state,  //* current state\n        curr: `${state.curr || \"\"}${payload.digit}`, //* current operand, adds a digit to the end of it\n      }\n    case ACTIONS.CLEAR:\n      return {} //~ initial state defined in useReducer\n    case ACTIONS.CHOOSE_OPERATION:\n      if (state.curr == null && state.prev == null) {\n        return state //~ if there is no value in current or previous operands returns state (which is nothing)\n      }\n      if (state.curr == null) { //~ to change our operation without altering values\n        return {\n          ...state,\n          operation: payload.operation,\n        }\n      }\n      if (state.prev == null) {\n        return {\n          ...state,\n          operation: payload.operation, //~ set operation\n          prev: state.curr, //~ set previous operand to current operand (allows the number to be moved up basically)\n          curr: null //~ empties current field\n        }\n      }\n      return {\n        ...state,\n        prev: evaluate(state), //* takes the state and evaluates it with the operation selected v\n        operation: payload.operation,\n        curr: null //* after calculating the two values sets current value to null\n      }\n    case ACTIONS.DELETE_DIGIT:\n      //~ if we're in the overwrite state, delete current operand\n      if(state.overwrite) return {\n        ...state,\n        overwrite: false,\n        curr: null\n      }\n      if(state.curr == null) { //~ if our current operand is null return our current state (because we can't delete anything from this)\n        return state\n      }\n      if(state.curr.length === \"1\") { //~ if there's only one number left in our current operand remove it completely\n        return {\n          ...state,\n          curr: null,\n        }\n      }\n      return {\n        ...state,\n        curr: state.curr.slice(0, -1) //~ delete the last digit\n      }\n    case ACTIONS.EVALUATE:\n      //~ if we don't have all our information, return our current state (do nothing)\n      if(state.curr == null || state.prev == null || state.operation == null) {\n        return state;\n      }\n      //~ else calculate\n      return {\n        ...state,\n        prev: null,\n        overwrite: true, \n        operation: null,\n        curr: evaluate(state)\n      }\n    default: \n      return state\n  }\n}\n\nfunction evaluate({ curr, prev, operation }) {\n  //~ convert values assigned in evaluate to numbers\n  const previous = parseFloat(prev)\n  const current = parseFloat(curr)\n\n  //~ if the values don't exist return an empty string\n  if(isNaN(previous) || isNaN(current)) {\n    return \"\"\n  }\n    let computation = \"\" //~ our computation results in nothing (initial value)\n    switch(operation) { //~ allows us to do the different operations\n      case \"+\":\n        computation = previous + current\n        break;\n      case \"-\":\n        computation = previous - current\n        break;\n      case \"*\":\n        computation = previous * current\n        break;\n      case \"÷\":\n        computation = previous / current\n        break;\n      default:\n        return \"\"\n    }\n    return computation.toString()\n}\n\n//! Formatting our integer\nconst INT_FORMATTER = new Intl.NumberFormat(\"en-us\", {\n  maximumFractionDigits: 0\n})\n\nfunction formatOperand(operand) {\n  if (operand == null) return //~ operand equal to none don't do anything\n  const [integer, decimal] = operand.split(\".\") //~ split on the decimal\n  if (decimal == null) return INT_FORMATTER.format(integer) //~ if there's no decimal take the integer and format it\n    return `${INT_FORMATTER.format(integer)}.${decimal}` //~ this keeps the decimal portion with no formatting\n}\n\nfunction App() {\n  const [{curr, prev, operation}, dispatch] = useReducer(reducer, {})\n  return (\n    <>\n    <Global />\n      <Calc>\n        <Output>\n          <div className=\"prev\">{formatOperand(prev)} {operation}</div>\n          <div className=\"curr\">{formatOperand(curr)}</div>\n        </Output>\n        <Two onClick={() => dispatch({type: ACTIONS.CLEAR})}>AC</Two>\n        <Btn onClick={() => dispatch({type: ACTIONS.DELETE_DIGIT})}>DEL</Btn>\n        <OperationBtn operation=\"÷\" dispatch={dispatch} />\n        <DigitBtn digit=\"1\" dispatch={dispatch} />\n        <DigitBtn digit=\"2\" dispatch={dispatch} />\n        <DigitBtn digit=\"3\" dispatch={dispatch} />\n        <OperationBtn operation=\"*\" dispatch={dispatch} />\n        <DigitBtn digit=\"4\" dispatch={dispatch}/>\n        <DigitBtn digit=\"5\" dispatch={dispatch}/>\n        <DigitBtn digit=\"6\" dispatch={dispatch}/>\n        <OperationBtn operation=\"+\" dispatch={dispatch} />\n        <DigitBtn digit=\"7\" dispatch={dispatch}/>\n        <DigitBtn digit=\"8\" dispatch={dispatch}/>\n        <DigitBtn digit=\"9\" dispatch={dispatch}/>\n        <OperationBtn operation=\"-\" dispatch={dispatch} />\n        <DigitBtn digit=\".\" dispatch={dispatch}/>\n        <DigitBtn digit=\"0\" dispatch={dispatch}/>\n        <Two onClick={() => dispatch({type: ACTIONS.EVALUATE})}>=</Two>\n      </Calc>\n      </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { ThemeProvider } from 'styled-components';\n\nconst theme = {\n    colors: {\n        bg: 'rgb(136, 172, 238)',\n        output: 'rgb(71, 92, 148, 0.65)',\n        prev: 'rgb(230, 230, 250, 0.75)',\n        curr: 'rgb(230, 230, 250)',\n        btn: 'rgb(194, 206, 237, 0.75)',\n        btntext: 'rgb(12, 38, 107)',\n        hover: 'rgb(194, 206, 237)'\n    }\n}\n\nconst Theme = ({children}) => {\n    return <ThemeProvider theme={theme}>{children}</ThemeProvider>\n}\n\nexport default Theme","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport Theme from './Theme';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Theme>\n      <App />\n    </Theme>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}